
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AlunoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  datanasc: 'datanasc',
  arteMarcial: 'arteMarcial',
  RA: 'RA'
};

exports.Prisma.MatriculaScalarFieldEnum = {
  id: 'id',
  alunoId: 'alunoId',
  turmaId: 'turmaId',
  dataMatricula: 'dataMatricula'
};

exports.Prisma.ProfessorScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cpf: 'cpf',
  email: 'email',
  telefone: 'telefone',
  arteMarcial: 'arteMarcial'
};

exports.Prisma.TurmaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  arteMarcial: 'arteMarcial',
  professorId: 'professorId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AlunoOrderByRelevanceFieldEnum = {
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  arteMarcial: 'arteMarcial'
};

exports.Prisma.ProfessorOrderByRelevanceFieldEnum = {
  nome: 'nome',
  cpf: 'cpf',
  email: 'email',
  telefone: 'telefone',
  arteMarcial: 'arteMarcial'
};

exports.Prisma.TurmaOrderByRelevanceFieldEnum = {
  nome: 'nome',
  arteMarcial: 'arteMarcial'
};


exports.Prisma.ModelName = {
  Aluno: 'Aluno',
  Matricula: 'Matricula',
  Professor: 'Professor',
  Turma: 'Turma'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Instrutor\\Desktop\\projeto\\api\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Instrutor\\Desktop\\projeto\\api\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Aluno {\n  id          Int         @id @default(autoincrement())\n  nome        String\n  email       String      @unique\n  telefone    String\n  datanasc    DateTime?   @db.DateTime(6) // Corrigido para não exceder precisão máxima\n  arteMarcial String\n  RA          Int         @unique\n  Matricula   Matricula[]\n}\n\nmodel Matricula {\n  id            Int       @id @default(autoincrement())\n  alunoId       Int\n  turmaId       Int\n  dataMatricula DateTime? @default(now()) @db.DateTime(6) // Corrigido também para precisão correta\n  aluno         Aluno     @relation(fields: [alunoId], references: [id])\n  turma         Turma     @relation(fields: [turmaId], references: [id])\n}\n\nmodel Professor {\n  id          Int     @id @default(autoincrement())\n  nome        String\n  cpf         String  @unique\n  email       String  @unique\n  telefone    String?\n  arteMarcial String?\n  Turma       Turma[]\n}\n\nmodel Turma {\n  id          Int         @id @default(autoincrement())\n  nome        String\n  arteMarcial String?\n  professorId Int?\n  professor   Professor?  @relation(fields: [professorId], references: [id])\n  Matricula   Matricula[]\n}\n",
  "inlineSchemaHash": "c4648cb5ae1677b0cc22a2a3dc47e2a76309ecac9e645e6c3945487eb5af8327",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Aluno\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"datanasc\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"arteMarcial\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"RA\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Matricula\",\"kind\":\"object\",\"type\":\"Matricula\",\"relationName\":\"AlunoToMatricula\"}],\"dbName\":null},\"Matricula\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alunoId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"turmaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dataMatricula\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aluno\",\"kind\":\"object\",\"type\":\"Aluno\",\"relationName\":\"AlunoToMatricula\"},{\"name\":\"turma\",\"kind\":\"object\",\"type\":\"Turma\",\"relationName\":\"MatriculaToTurma\"}],\"dbName\":null},\"Professor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cpf\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"arteMarcial\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Turma\",\"kind\":\"object\",\"type\":\"Turma\",\"relationName\":\"ProfessorToTurma\"}],\"dbName\":null},\"Turma\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"arteMarcial\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"professorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"professor\",\"kind\":\"object\",\"type\":\"Professor\",\"relationName\":\"ProfessorToTurma\"},{\"name\":\"Matricula\",\"kind\":\"object\",\"type\":\"Matricula\",\"relationName\":\"MatriculaToTurma\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

